<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/OverviewRkiData;component/Styles/DefaultSetup.xaml" />
        <ResourceDictionary Source="/OverviewRkiData;component/Styles/Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TextBlockBase" TargetType="TextBlock" BasedOn="{x:Null}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="10 7 30 2" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontFamily" Value="{StaticResource ControlElementButtonFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource ControlElementButtonFontSize}" />
        <Setter Property="Foreground" Value="{StaticResource BrushMonochromatischGreen_B}" />
    </Style>

    <!-- Used this style for text Button (oldName: ContextMenuButtonBase) -->
    <Style x:Key="BaseButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="{StaticResource ControlElementHeight}" />
        <Setter Property="FontWeight" Value="{StaticResource ControlElementButtonTextFontWeight}" />
        <Setter Property="FontFamily" Value="{StaticResource ControlElementButtonFontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource ControlElementButtonFontSize}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="0 0 0 0" />

        <Setter Property="BorderBrush" Value="{StaticResource BrushMonochromatischGreen_C}" />
        <Setter Property="Background" Value="{StaticResource BrushMonochromatischGreen_D}" />
        <Setter Property="Foreground" Value="{StaticResource BrushMonochromatischGreen_B}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BrushMonochromatischGreen_B}" />
                <Setter Property="Foreground" Value="{StaticResource BrushMonochromatischGreen_C}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Base template with triggers -->
    <Style x:Key="ButtonTemplateBase" TargetType="Button">
        <Setter Property="Margin" Value="3" />
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="Button">
                    <Viewbox Width="{Binding RelativeSource={RelativeSource Self}, Path=Width}"
                             Height="{Binding RelativeSource={RelativeSource Self}, Path=Height}">
                        <Grid Background="{StaticResource BrushMonochromatischGreen_D}">
                            <Border BorderThickness="0" BorderBrush="Transparent" Margin="25 25 0 0" VerticalAlignment="Bottom" HorizontalAlignment="Right" Height="25" MinWidth="25" Padding="0" >
                                <Path x:Name="BaseCornerBorder3" Data="F1 M 0,25 25,0 Z" Stroke="{StaticResource BrushMonochromatischGreen_E}" Height="25" Width="25" Margin="0" StrokeThickness="1.5" />
                            </Border>
                            <Border x:Name="BaseFrameBorder" BorderThickness="1 1 1 0" BorderBrush="{StaticResource BrushMonochromatischGreen_E}" Margin="0 0 0 25" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Padding="2" />
                            <Border x:Name="BaseFrameBorder2" BorderThickness="1 0 0 1" BorderBrush="{StaticResource BrushMonochromatischGreen_E}" Margin="0 25 25 0" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" MinHeight="25" MinWidth="25" />

                            <TextBlock x:Name="TextBlock" 
                                       Text="{TemplateBinding Content}"
                                       Style="{StaticResource TextBlockBase}"
                                       Foreground="{StaticResource BrushMonochromatischGreen_C}" />
                        </Grid>
                        
                    </Viewbox>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BaseFrameBorder" Property="BorderBrush" Value="{StaticResource BrushMonochromatischGreen_C}" />
                            <Setter TargetName="BaseFrameBorder2" Property="BorderBrush" Value="{StaticResource BrushMonochromatischGreen_C}" />
                            <Setter TargetName="BaseCornerBorder3" Property="Stroke" Value="{StaticResource BrushMonochromatischGreen_C}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BaseFrameBorder" Property="BorderBrush" Value="{StaticResource BrushMonochromatischGreen_A}" />
                            <Setter TargetName="BaseFrameBorder2" Property="BorderBrush" Value="{StaticResource BrushMonochromatischGreen_A}" />
                            <Setter TargetName="BaseCornerBorder3" Property="Stroke" Value="{StaticResource BrushMonochromatischGreen_A}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BaseFrameBorder" Property="BorderBrush" Value="{StaticResource BrushMonochromatischGreen_E}" />
                            <Setter TargetName="BaseFrameBorder2" Property="BorderBrush" Value="{StaticResource BrushMonochromatischGreen_E}" />
                            <Setter TargetName="BaseCornerBorder3" Property="Stroke" Value="{StaticResource BrushMonochromatischGreen_E}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ButtonTemplateBase}" />

    
    <!--Specials button-->

    <!-- base icon settings -->
    <Style x:Key="PathIconBase" TargetType="Path">
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Fill" Value="{StaticResource BrushMonochromatischGreen_A}"/>
    </Style>

    <!-- close icon -->
    <Style x:Key="PathIconClose" TargetType="Path" BasedOn="{StaticResource PathIconBase}">
        <Setter Property="Width" Value="12" />
        <Setter Property="Height" Value="12" />
        <Setter Property="Data"
                Value="M11.164856,0 L40.937775,29.772919 70.710693,0 81.875549,11.164841 52.102631,40.937759 81.875549,70.710678 70.710693,81.875519 40.937775,52.1026 11.164856,81.875519 0,70.710678 29.772919,40.937759 0,11.164841 z" />
    </Style>

    <!-- Icon Base Button  -->
    <Style x:Key="ButtonIconBase" TargetType="Button" >

        <Setter Property="Content" Value="{StaticResource PathIconNewStyle}" />
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="Button">
                    <Viewbox Width="{Binding RelativeSource={RelativeSource Self}, Path=Width}"
                             Height="{Binding RelativeSource={RelativeSource Self}, Path=Height}" 
                             Margin="3">
                        <Border x:Name="Border" 
                                BorderBrush="{StaticResource BrushMonochromatischGreen_A}" 
                                BorderThickness="1">
                            <Path x:Name="pathIcon" Style="{TemplateBinding Content}" />
                        </Border>
                    </Viewbox>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="DodgerBlue" />
                            <Setter TargetName="pathIcon" Property="Fill" Value="DeepSkyBlue" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Blue" />
                            <Setter TargetName="pathIcon" Property="Fill" Value="LightSkyBlue" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="LightBlue" />
                            <Setter TargetName="pathIcon" Property="Fill" Value="LightCyan" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!-- Close button -->
    <Style x:Key="ButtonClose" TargetType="Button" BasedOn="{StaticResource ButtonIconBase}">
        <Setter Property="Content" Value="{StaticResource PathIconClose}" />
    </Style>

</ResourceDictionary>